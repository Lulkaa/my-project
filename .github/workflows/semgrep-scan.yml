
name: Semgrep PR Scan

on:
  pull_request:
    branches: [ main, master ]
  workflow_dispatch: {}
  
permissions:
  contents: read
  pull-requests: write

jobs:
  semgrep:
    name: Run Semgrep
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python 
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: '20' 
          cache: 'npm'      
          
      - name: Install Semgrep
        run: |
          python -m pip install --upgrade pip
          pip install semgrep

      - name: Run Semgrep scan (JSON / TXT )
        shell: bash
        run: |
          semgrep \
             --config "p/r2c-security-audit"  \
             --config "semgrep_rules/nosql-injection-rule.yaml" \
             --json --output semgrep_scan_results.json || true 
          
           
             semgrep \
             --config "p/r2c-security-audit"  \
             --config "semgrep_rules/nosql-injection-rule.yaml" \
             --text --output semgrep_scan_results.txt || true
      
      - name: Report output (json)
        run: cat semgrep_scan_results.json

      - name: Report output(txt)
        run : cat semgrep_scan_results.txt

      - name: Publish semgrep results artifacts (txt/json)
        uses: actions/upload-artifact@v4
        with:
          name: semgrep-scan-reports
          path: |
            semgrep_scan_results.json
            semgrep_scan_results.txt
      
      - name: Build PR comment
        id: parse
        run: node .github/workflows/pretty-md-comment.js
        
      - name: Comment Semgrep report
        if: ${{ github.event_name == 'pull_request' }}
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const runUrl = `${process.env.GITHUB_SERVER_URL}/${process.env.GITHUB_REPOSITORY}/actions/runs/${process.env.GITHUB_RUN_ID}`;
            const report = fs.readFileSync('pretty-comment.md', 'utf8');
            
            const body = [
            report,
            '',
            `ðŸ“Ž [Download Semgrep TXT & JSON report here](${runUrl})`
            ].join('\n');
            
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.pull_request.number,
              body
            });
      # -------- New: fail job if issues present ----------
      - name: Fail if issues present
        if: steps.parse.outputs.has_issues == 'true'
        run: |
          echo "High/Medium/Critical vulnerabilities were found. Failing the job."
          exit 1
