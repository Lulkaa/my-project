# üìå Purpose:
#   This workflow runs automated Snyk security scans for both:
#     ‚Ä¢ Open Source dependencies (Snyk Open Source)
#     ‚Ä¢ Application source code (Snyk Code)
#   It helps detect and track vulnerabilities in dependencies and code
#   during Pull Requests and manual runs.
#
# üîç What it does:
#   ‚Ä¢ Installs and authenticates the Snyk CLI
#   ‚Ä¢ Scans dependencies and source code for vulnerabilities
#   ‚Ä¢ Generates reports in SARIF, JSON, and TXT formats
#   ‚Ä¢ Uploads scan results to GitHub Security tab (SARIF)
#   ‚Ä¢ Publishes TXT/JSON reports as build artifacts
#   ‚Ä¢ Posts a comment on the Pull Request with a link to download reports
#
# üìÑ Output:
#   - snyk-os.json / snyk-code.json   ‚Üí JSON reports with vulnerability data
#   - snyk-os.sarif / snyk-code.sarif ‚Üí Security scan results for GitHub
#   - snyk-os.txt / snyk-code.txt     ‚Üí Console-readable reports
#   - A PR comment with üìé link to the workflow run containing artifacts

name: Snyk Open Source & Code


on:
  pull_request:
    branches: [ "main" ]
  workflow_dispatch: {}


permissions:
  contents: read              
  security-events: write   
  pull-requests: write
jobs:

  snyk-scan:
    runs-on: ubuntu-latest    

    steps:
  
      - name: Checkout
        uses: actions/checkout@v4


      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: '20' 
          cache: 'npm'      


      - name: Install dependencies
        run: npm ci

      # ---------- Install & authenticate Snyk ----------
      - name: Install Snyk CLI
        run: npm install -g snyk

      - name: Authenticate Snyk
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }} 
        run: snyk auth "$SNYK_TOKEN"

      # ---------- Snyk Open Source (Dependency scan) ----------
      - name: Run Snyk Open Source test (Console results)
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        run: snyk test   --sarif-file-output=snyk-os.sarif  --json-file-output=snyk-os.json | tee snyk-os.txt || true

      - name: Upload Snyk Open Source SARIF to GitHub
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: snyk-os.sarif                   
          category: snyk-open-source                
     
      #Output to .json file 
      - name: Results in .json
        run: cat snyk-os.json
      #Output to .txt
      - name: Results in .txt
        run: cat snyk-os.txt


      - name: Publish Open Source artifacts (txt/json)
        uses: actions/upload-artifact@v4
        with:
          name: snyk-open-source-reports
          path: |
            snyk-os.txt
            snyk-os.json
            
      # ---------- Snyk Code (Static code analysis) ----------
      - name: Run Snyk Code test ‚Üí SARIF
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        run: snyk code test --sarif-file-output=snyk-code.sarif --json-file-output=snyk-code.json | tee snyk-code.txt || true

      - name: Upload Snyk Code SARIF to GitHub
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: snyk-code.sarif                
          category: snyk-code                       
      
       #Output to .json file 
      - name: Results in .json
        run: cat snyk-code.json
      #Output to .txt
      - name: Results in .txt
        run: cat snyk-code.txt
        
      - name: Results in .safir
        run: cat snyk-code.sarif

      - name: Publish Code artifacts (txt/json)
        uses: actions/upload-artifact@v4
        with:
          name: snyk-code-reports
          path: |
            snyk-code.txt
            snyk-code.json

         # ---------- Comment to PR ----------
      - name: Comment to PR with artifact link
        if: ${{ github.event_name == 'pull_request' }}
        uses: actions/github-script@v7
        with:
          script: |
            const runUrl = `${process.env.GITHUB_SERVER_URL}/${process.env.GITHUB_REPOSITORY}/actions/runs/${process.env.GITHUB_RUN_ID}`;

            const body = `
            üìé [Download Snyk TXT & JSON report here](${runUrl}) ` 
            
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.pull_request.number,
              body
            });
