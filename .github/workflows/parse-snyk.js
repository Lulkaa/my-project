const fs = require('fs');

const path = 'snyk-os.json';
let raw = fs.readFileSync(path, 'utf8');
let parsed = JSON.parse(raw);


const vulnerabilities = Array.isArray(parsed.vulnerabilities)
  ? parsed.vulnerabilities
  : [];

const wanted = new Set(['critical', 'high', 'medium']);
const vulns = vulnerabilities.filter(v =>
  wanted.has(String(v.severityWithCritical))
);

const hasIssues = vulns.length > 0;

const mdRow = (v) => {
  const sev = String(v.severityWithCritical);
  const pkg = v.packageName;
  const ver = '@${v.version}';
  const id = v.id;
  const title = v.title;
  const fix = Array.isArray(v.fixedIn) ? v.fixedIn.join(', ') : 'no fix listed';
  let ref = '';
  if (Array.isArray(v.references) && v.references[0]?.url) {
    ref = ` [[ref]](${v.references[0].url})`;
  }
  return `- **${sev}** \`${pkg}${ver}\` — ${title} (${id})  \n Fix: ${fix}${ref}`;
};

const header = hasIssues
  ? `### ❌ Snyk found ${vulns.length} vulnerabilities`
  : `### ✅ Snyk: no medium/high/critical vulnerabilities found`;

const projectName = parsed.projectName ;


const body = [
  header,
  '',
  `**Project**: ${projectName}`,
  hasIssues ? '\n**Details:**\n' : '',
  hasIssues ? vulns.map(mdRow).join('\n') : '',
  '',
  '> Generated by Snyk PR Gate'
].join('\n');

fs.writeFileSync('comment.md', body);

console.log(`has_issues=${hasIssues}`);
fs.writeFileSync(process.env.GITHUB_OUTPUT || 'GITHUB_OUTPUT', `has_issues=${hasIssues}\n`, { flag: 'a' });

