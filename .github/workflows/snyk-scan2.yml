name: Snyk (Extra task)

on:
  pull_request:
    branches: ["main", "master"]
    types: [opened, synchronize, reopened, ready_for_review]
  workflow_dispatch: {}

permissions:
  contents: read
  pull-requests: write   # needed to comment on PRs
  issues: write          # optional, but you had it; fine to keep

jobs:
  snyk-scan:
    if: github.event.pull_request.draft == false
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Snyk CLI
        run: npm install -g snyk

      - name: Authenticate Snyk
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        run: snyk auth "$SNYK_TOKEN"

      - name: Run Snyk Open Source test (JSON report)
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        # allow the scan step to succeed even if vulns are found; we'll decide pass/fail
        run: snyk test --json-file-output=snyk-os.json || true

      - name: Ensure report exists
        run: '[ -f snyk-os.json ] || echo "{}" > snyk-os.json'

      # -------- New: parse report & build PR comment ----------
      - name: Parse report & build PR comment
        id: parse
        run: parse-snyk.js
      # -------- New: post the PR comment ----------
      - name: Post PR comment
        if: always()
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const body = fs.readFileSync('comment.md','utf8');
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.pull_request.number,
              body
            });

      # -------- New: fail job if issues present ----------
      - name: Fail if issues present
        if: steps.parse.outputs.has_issues == 'true'
        run: |
          echo "High/Medium/Critical vulnerabilities were found. Failing the job."
          exit 1

       
       
