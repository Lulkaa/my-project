name: Snyk (Extra task) 

on: 
   pull_request: 
     branches: [ "main", "master" ] 
   workflow_dispatch: {}

permissions: 
   contents: read # allows reading repository contents 
   pull-requests: write

jobs:
  snyk-scan:
    runs-on: ubuntu-latest
    
    steps:
     - name: Checkout 
       uses: actions/checkout@v4 
       
     - name: Set up Node
       uses: actions/setup-node@v4
       with:
          node-version: '20'  # Node.js version to use
          cache: 'npm'  

      # 3️⃣ Install all project dependencies from package-lock.json (clean install)
     - name: Install dependencies
       run: npm ci

      # ---------- Install & authenticate Snyk ----------
      # 4️⃣ Install the Snyk CLI globally
     - name: Install Snyk CLI
       run: npm install -g snyk

      # 5️⃣ Authenticate with Snyk using your API token stored in GitHub Secrets
     - name: Authenticate Snyk
       env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}   # stored in GitHub repo Settings → Secrets
       run: snyk auth "$SNYK_TOKEN"
     - name: Run Snyk Open Source test (Console results)
       env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
       run: snyk test  --json-file-output=snyk-os.json  || true
    
     - name: Find Critical/High/Moderate issues 
       uses: actions/github-script@v7
       with:
          script: |
            const fs = require('fs');   // Node.js file system module
            const path = 'snyk-os.json';
            const bodyIfFound = (matches) => [
             '🚨 **Snyk findings detected**',
             '',
             'The Snyk report for this PR contains at least one of: **critical**, **high**, or **medium**.',
             '',
             'Matched terms:',
             '```\n' + matches.join(', ') + '\n```',
             '',
             'This workflow is marked as **failed** as requested.'
              ].join('\n');
            const txt = fs.existsSync(path)
              ? fs.readFileSync(path, 'utf8')
              : '';
            const rx = /\b(critical|high|medium)\b/gi;
            const matches = [...txt.matchAll(rx)].map(m => m[0].toLowerCase());
            if (matches.length > 0) {
              // Post a single concise comment to the pull request
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.payload.pull_request.number,
                body: bodyIfFound(matches)
              });
               core.setFailed('critical/high/medium vulnerabilities found in Snyk report');
              } else {
              ('No critical/high/medium severities found in Snyk report.');
            }
     
       
       
