name: Snyk (Extra task)

on:
  pull_request:
    branches: [ "main", "master" ]
  workflow_dispatch: {}

permissions:
  contents: read
  pull-requests: write

jobs:
  snyk-scan:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      # Install & auth Snyk
      - name: Install Snyk CLI
        run: npm install -g snyk

      - name: Authenticate Snyk
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        run: snyk auth "$SNYK_TOKEN"

      # –ó–≤—ñ—Ç Snyk OSS (—É JSON)
      - name: Run Snyk Open Source test (JSON report)
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        run: snyk test --json-file-output=snyk-os.json || true

      # –ì–∞—Ä–∞–Ω—Ç—É—î–º–æ, —â–æ —Ñ–∞–π–ª —ñ—Å–Ω—É—î (—â–æ–± –Ω–µ –≤–ø–∞—Å—Ç–∏ –Ω–∞ —á–∏—Ç–∞–Ω–Ω—ñ)
      - name: Ensure report exists
        run: '[ -f snyk-os.json ] || echo "{}" > snyk-os.json'

      # –ü–æ—à—É–∫ critical/high/medium ‚Üí –∫–æ–º–µ–Ω—Ç—É—î–º–æ PR —ñ –≤–∞–ª–∏–º–æ workflow
      - name: Find Critical/High/Medium issues and fail
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const core = require('@actions/core');

            const path = 'snyk-os.json';

            // –§–æ—Ä–º—É—î–º–æ —Ç—ñ–ª–æ –∫–æ–º–µ–Ω—Ç–∞—Ä—è
            const bodyIfFound = (matches) => {
              // —É–Ω—ñ–∫–∞–ª—å–Ω—ñ –∑–±—ñ–≥–∏ –¥–ª—è —Å—Ç–∏—Å–ª–æ—Å—Ç—ñ
              const uniq = [...new Set(matches.map(m => m.toLowerCase()))];
              return [
                'üö® **Snyk findings detected**',
                '',
                'The Snyk report for this PR contains at least one of: **critical**, **high**, or **medium**.',
                '',
                'Matched terms:',
                '```\n' + uniq.join(', ') + '\n```',
                '',
                'This workflow is marked as **failed** as requested.'
              ].join('\n');
            };

            // –ß–∏—Ç–∞—î–º–æ —Ç–µ–∫—Å—Ç –∑–≤—ñ—Ç—É
            const txt = fs.existsSync(path) ? fs.readFileSync(path, 'utf8') : '';

            // –®—É–∫–∞—î–º–æ —Å–ª–æ–≤–∞ critical/high/medium (–ø–æ–≤–Ω—ñ —Å–ª–æ–≤–∞, –±–µ–∑ —Ä–µ–≥—ñ—Å—Ç—Ä—É)
            const rx = /\b(critical|high|medium)\b/gi;
            const matches = [...txt.matchAll(rx)].map(m => m[0]);

            if (matches.length > 0) {
              // –ö–æ–º–µ–Ω—Ç—É—î–º–æ —É PR
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.payload.pull_request.number,
                body: bodyIfFound(matches)
              });

              // –í–∞–ª–∏–º–æ job/workflow
              core.setFailed('critical/high/medium vulnerabilities found in Snyk report');
            } else {
              core.info('‚úÖ No critical/high/medium severities found in Snyk report.');
            }

     
       
       
