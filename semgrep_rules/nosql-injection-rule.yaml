rules:
  - id: nosql-injection-rule
    message: Possible NoSQL Injection. Unvalidated user input is used directly
             inside a MongoDB query . This allows attackers to inject query operators (e.g. `$ne`, `$gt`, `$where`)
             and bypass authentication or access unauthorized data. Validate and sanitize input before using it in database queries, 
             and avoid passing raw request objects to Mongoose methods.
    languages:
      - javascript
    severity: HIGH
    metadata:
      cwe: "CWE-932 Improper Neutralization of Special Elements in Data Query Logic"
      owasp:
       - A03:2021 - Injection
      references:
       - https://owasp.org/Top10/A03_2021-Injection/
      category: security
    mode: taint
    pattern-inside:
      - pattern: |
          router.$METHOD(..., ($REQ, $RES) => {
            ...
          })
    pattern-sources:
      - pattern: $REQ.body
      - pattern: $REQ.query
      - pattern: $REQ.params
    pattern-sinks:
      - pattern: $MODEL.find($ARG)
      - pattern: $MODEL.findOne($ARG)
      - pattern: $MODEL.findById($ARG)
      - pattern: $MODEL.aggregate($ARG)
      - pattern: $MODEL.updateOne($ARG, ...)
      - pattern: $MODEL.updateMany($ARG, ...)
      - pattern: $MODEL.replaceOne($ARG, ...)
      - pattern: $MODEL.deleteOne($ARG)
      - pattern: $MODEL.deleteMany($ARG)
      - pattern: $MODEL.findOneAndUpdate($Q, $UPD, ...)
      - pattern: $MODEL.findByIdAndUpdate($ID, $UPD, ...)
      - pattern: new $MODEL($DOC)
      - pattern: $MODEL.create($DOC)
      - pattern: $DOC.save(...)
